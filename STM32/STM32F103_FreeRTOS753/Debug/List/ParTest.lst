###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     17/Dec/2013  09:01:04 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\pragram\STM32F103_FreeRTOS\ParTest\ParTest.c          #
#    Command line =  D:\pragram\STM32F103_FreeRTOS\ParTest\ParTest.c -D       #
#                    IAR_ARM_CM3 -lcN D:\pragram\STM32F103_FreeRTOS\Debug\Lis #
#                    t\ --diag_suppress Pa082,pe191 -o                        #
#                    D:\pragram\STM32F103_FreeRTOS\Debug\Obj\ --no_cse        #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.4\arm\INC\c\DLib_Config_Full.h" -I                     #
#                    D:\pragram\STM32F103_FreeRTOS\.\ -I                      #
#                    D:\pragram\STM32F103_FreeRTOS\STM32F10x_StdPeriph_Lib_V3 #
#                    .5.0\Libraries\STM32F10x_StdPeriph_Driver\inc\ -I        #
#                    D:\pragram\STM32F103_FreeRTOS\Source\include\ -I         #
#                    D:\pragram\STM32F103_FreeRTOS\Common\include\ -I         #
#                    D:\pragram\STM32F103_FreeRTOS\CMSIS\ -I                  #
#                    D:\pragram\STM32F103_FreeRTOS\user_task\ -I              #
#                    D:\pragram\STM32F103_FreeRTOS\test_task\ -Ol             #
#                    --use_c++_inline                                         #
#    List file    =  D:\pragram\STM32F103_FreeRTOS\Debug\List\ParTest.lst     #
#    Object file  =  D:\pragram\STM32F103_FreeRTOS\Debug\Obj\ParTest.o        #
#                                                                             #
#                                                                             #
###############################################################################

D:\pragram\STM32F103_FreeRTOS\ParTest\ParTest.c
      1          /*
      2              FreeRTOS V7.5.3 - Copyright (C) 2013 Real Time Engineers Ltd. 
      3              All rights reserved
      4          
      5              VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
      6          
      7              ***************************************************************************
      8               *                                                                       *
      9               *    FreeRTOS provides completely free yet professionally developed,    *
     10               *    robust, strictly quality controlled, supported, and cross          *
     11               *    platform software that has become a de facto standard.             *
     12               *                                                                       *
     13               *    Help yourself get started quickly and support the FreeRTOS         *
     14               *    project by purchasing a FreeRTOS tutorial book, reference          *
     15               *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
     16               *                                                                       *
     17               *    Thank you!                                                         *
     18               *                                                                       *
     19              ***************************************************************************
     20          
     21              This file is part of the FreeRTOS distribution.
     22          
     23              FreeRTOS is free software; you can redistribute it and/or modify it under
     24              the terms of the GNU General Public License (version 2) as published by the
     25              Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
     26          
     27              >>! NOTE: The modification to the GPL is included to allow you to distribute
     28              >>! a combined work that includes FreeRTOS without being obliged to provide
     29              >>! the source code for proprietary components outside of the FreeRTOS
     30              >>! kernel.
     31          
     32              FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
     33              WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     34              FOR A PARTICULAR PURPOSE.  Full license text is available from the following
     35              link: http://www.freertos.org/a00114.html
     36          
     37              1 tab == 4 spaces!
     38          
     39              ***************************************************************************
     40               *                                                                       *
     41               *    Having a problem?  Start by reading the FAQ "My application does   *
     42               *    not run, what could be wrong?"                                     *
     43               *                                                                       *
     44               *    http://www.FreeRTOS.org/FAQHelp.html                               *
     45               *                                                                       *
     46              ***************************************************************************
     47          
     48              http://www.FreeRTOS.org - Documentation, books, training, latest versions,
     49              license and Real Time Engineers Ltd. contact details.
     50          
     51              http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
     52              including FreeRTOS+Trace - an indispensable productivity tool, a DOS
     53              compatible FAT file system, and our tiny thread aware UDP/IP stack.
     54          
     55              http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
     56              Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
     57              licenses offer ticketed support, indemnification and middleware.
     58          
     59              http://www.SafeRTOS.com - High Integrity Systems also provide a safety
     60              engineered and independently SIL3 certified version for use in safety and
     61              mission critical applications that require provable dependability.
     62          
     63              1 tab == 4 spaces!
     64          */
     65          
     66          /*-----------------------------------------------------------
     67           * Simple parallel port IO routines.
     68           *-----------------------------------------------------------*/
     69          
     70          /* FreeRTOS.org includes. */
     71          #include "FreeRTOS.h"
     72          #include "task.h"
     73          #include "partest.h"
     74          #include "macros.h"
     75          /* Library includes. */
     76          //#include "stm32f10x_lib.h"
     77          #include "stm32f10x.h"
     78          #define partstMAX_OUTPUT_LED	( 4 )
     79          #define partstFIRST_LED			GPIO_Pin_1
     80          
     81          static unsigned portSHORT usOutputValue = 0;
     82          
     83          /*-----------------------------------------------------------*/
     84          
     85          void vParTestInitialise( void )
     86          {
     87          GPIO_InitTypeDef GPIO_InitStructure;
     88          
     89          	/* Configure PC.06, PC.07, PC.08 and PC.09 as output push-pull */
     90          	GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
     91          	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     92          	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     93          	GPIO_Init( GPIOC, &GPIO_InitStructure );
     94          }
     95          /*-----------------------------------------------------------*/
     96          
     97          void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
     98          {
     99          unsigned portSHORT usBit;
    100          
    101          	vTaskSuspendAll();
    102          	{
    103          		if( uxLED < partstMAX_OUTPUT_LED )
    104          		{
    105          			usBit = partstFIRST_LED << uxLED;
    106          
    107          			if( xValue == pdFALSE )
    108          			{
    109          				usBit ^= ( unsigned portSHORT ) 0xffff;
    110          				usOutputValue &= usBit;
    111          			}
    112          			else
    113          			{
    114          				usOutputValue |= usBit;
    115          			}
    116          
    117          			GPIO_Write( GPIOC, usOutputValue );
    118          		}	
    119          	}
    120          	xTaskResumeAll();
    121          }
    122          /*-----------------------------------------------------------*/
    123          unsigned char g_flag_led=0;
    124          #include "macros.h"
    125          #include "task_test.h"
    126          void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
    127          {
    128          //unsigned portSHORT usBit;
    129          
    130          	//vTaskSuspendAll();
    131          	{
    132          		if( uxLED < partstMAX_OUTPUT_LED )
    133          		{
    134          			/*usBit = partstFIRST_LED << uxLED;
    135          
    136          			if( usOutputValue & usBit )
    137          			{
    138          				usOutputValue &= ~usBit;
    139          			}
    140          			else
    141          			{
    142          				usOutputValue |= usBit;
    143          			}*/
    144                      if(g_flag_led == 1)
    145                      {
    146                          PR_LED1_ON();
    147                          PR_LED2_OFF();
    148                          g_flag_led = 0;
    149                      }
    150                      else
    151                      {
    152                          PR_LED2_ON();
    153                          PR_LED1_OFF();
    154                          g_flag_led = 1;
    155                      }
    156          
    157          			//GPIO_WriteBit(GPIOA,uxLED,usOutputValue);
    158                      //GPIO_Write( GPIOA, usOutputValue );
    159          		}
    160          	}
    161          	//xTaskResumeAll();
    162          }
    163          /*-----------------------------------------------------------*/
    164          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  vParTestInitialise
              8 -> GPIO_Init
       16  vParTestSetLED
             16 -> GPIO_Write
             16 -> vTaskSuspendAll
             16 -> xTaskResumeAll
        8  vParTestToggleLED
              8 -> GPIO_ResetBits
              8 -> GPIO_SetBits


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       1  g_flag_led
       2  usOutputValue
      32  vParTestInitialise
      68  vParTestSetLED
      62  vParTestToggleLED

 
   3 bytes in section .bss
 178 bytes in section .text
 
 178 bytes of CODE memory
   3 bytes of DATA memory

Errors: none
Warnings: none
